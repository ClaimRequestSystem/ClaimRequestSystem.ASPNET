networks:
    claimrequest_network:
        driver: bridge

services:
  claimrequest.api:
    container_name: claimrequest-api
    image: ${DOCKER_REGISTRY-}claimrequestapi
    build:
      context: .
      dockerfile: ClaimRequest.API/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      claimrequest.db:
        condition: service_healthy  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=claimrequest.db;Database=ClaimRequestDB;Username=db_user;Password=Iloveyou3000!;Port=5432
    networks:
      - claimrequest_network

  claimrequest.db:
    container_name: claimrequest-db
    image: postgres:latest
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: Iloveyou3000!
      POSTGRES_DB: ClaimRequestDB
    ports:
      - "5432:5432"
    networks:
      - claimrequest_network
    volumes:
      - claimrequest.db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U db_user -d ClaimRequestDB"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  claimrequest.db_data:

